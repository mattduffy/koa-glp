  <%# search box and results %>
  <div id="searchBoxDiv">
    <form id="search" name="search" method="POST" enctype="multipart/form-data" action="<%= origin %>/search">
      <label for="searchBoxId" id="large">
        Locate piers on the lake by searching for...<br>
        pier numbers, estate or family names.<br>
        Find an association on the lake by name.<br>
        Find a restaurant, marina or a public pier...<br>
      </label>
      <label for="searchBoxId" id="small">Search for a pier, estate, marina, or
      business.</label>
      <input id="searchBoxId" name="searchBox" type="search" value="" size="30" tabindex="1">
      <input id="csrf-tokenId" name="csrf-token" type="hidden" value="<%= csrfToken %>">
      <input id="submit" type="submit" value="Search" tabindex="1">
    </form>
  </div>
  <div id="searchResults">

  </div>
  <script nonce="<%= nonce %>" type="module">
    let origin = '<%= origin %>'
    let jwtAccess = '<%= searchJwtAccess %>'
    const search = document.forms.search
    const searchResults = document.querySelector('div#searchResults')
    const annotations = []
    window.addEventListener('load', async (e) => {
      e.preventDefault()
      e.stopPropagation()
      const searchParams = new URLSearchParams(document.location.search)
      const q = searchParams.get('q') 
      console.log(`q=${q}`)
      if (q !== null) {
        search.searchBox.value = q
        search.submit.click()
      }
    })
    window.addEventListener('popstate', (e) => {
      if (e.state) {
        // console.log('popstate: ', e.state)
        search.searchBox.value = e.state.tokens
        search.submit.click()
      }
    })
    // search box input events
    search.searchBoxId.addEventListener('input', (e) => {
      console.log('search input event triggered')
      console.log(e)
      let searchBox = e.target
      if (searchBox.value === '') {
        // search box field has been cleared.
        // trigger clearing map annotations, search results and url query string
        window.map.removeAnnotations(window.map.annotations)
        window.map.annotations = []
        annotations.length = 0
        document.querySelector('div#searchResults').innerHTML = ''
        history.back()
      }
    })
    search.addEventListener('submit', await doSearch)
    async function doSearch(e) {
      document.activeElement.blur()
      e.stopPropagation()
      e.preventDefault()
      searchResults.innerHTML = ''
      const formData = new FormData()
      formData.append('csrfTokenHidden', search['csrf-token'].value)
      formData.append('searchBox', search.searchBox.value)
      const queryState = {
        q: encodeURI(`?q=${formData.get('searchBox')}`),
        tokens: formData.get('searchBox'), 
      } 
      history.pushState(queryState, "", queryState.q)
      // mapkit search service
      // center of lake 42.598788, -88.423885
      //                42.568642, -88.478089
      const mapkitSearch = new window.mapkit.Search({
        addressFilter: mapkit.AddressFilter.including([
          mapkit.AddressCategory.Locality
        ]),
        coordinate: new window.mapkit.Coordinate(42.568642, -88.478089),
        // region: window.map.region,
        limitToCountries: 'US',
      })
      const _search = formData.get('searchBox')
      if (_search) {
        const mapkitSearchResults = mapkitSearch.search(_search,
          {
            searchDidError: (error) => {
              console.error(error)
            },
            searchDidComplete: (data) => {
              console.log(data)
              let mapkitResultsList
              if (data.places.length > 0) {
                const localityFilter = [
                  'Lake Geneva',
                   'Williams Bay',
                   'Fontana',
                   'Fontana-on-Geneva Lake',
                   'Walworth',
                   'Linn'
                ]
                data.locallyFiltered = data.places.filter((place) => {
                  return localityFilter.includes(place.locality)
                })
                console.log(data.locallyFiltered)
                if (data.locallyFiltered.length > 0) {
                  mapkitResultsList = document.createElement('ul')
                  mapkitResultsList.setAttribute('id', 'mapkitResults')
                  mapkitResultsList.setAttribute(
                    'aria-label',
                    `${data.locallyFiltered.length} Local Search Results:`,
                  )
                  mapkitResultsList.classList.add('searchResults', 'mapkitResults')
                  data.locallyFiltered.forEach((place) => {
                    console.log(place.locality, place.pointOfInterestCategory, place.name)
                    const li = document.createElement('li')
                    const nameSpan = document.createElement('span')
                    nameSpan.style.fontWeight = 600
                    nameSpan.style.fontStyle = 'italic'
                    nameSpan.style.cursor = 'pointer'
                    nameSpan.style.textDecoration = 'underline'
                    nameSpan.dataset.lat = place.coordinate.latitude
                    nameSpan.dataset.lon = place.coordinate.longitude
                    nameSpan.dataset.name = place.name
                    nameSpan.appendChild(document.createTextNode(place.name))
                    li.appendChild(nameSpan)
                    if (place.urls.length > 0) {
                      const linkSpan = document.createElement('span')
                      const link = document.createElement('a')
                      link.setAttribute('href', place.urls[0])
                      link.setAttribute('target', '_blank')
                      link.classList.add('external')
                      link.appendChild(linkSpan)
                      li.appendChild(link)
                    }
                    li.appendChild(document.createElement('br'))
                    li.appendChild(document.createTextNode(
                      `${place.fullThoroughfare}, ${place.locality}`)
                    )
                    mapkitResultsList.appendChild(li)
                    annotateSearchResultItem(nameSpan)
                  })
                  searchResults.appendChild(mapkitResultsList)
                }
              }
            }
          }, { limitToCountries: 'us' }
        )
        console.info(`mapkit search results: ${mapkitSearchResults}`)
        function annotateSearchResultItem(span) {
          span.addEventListener('click', (e) => {
            e.preventDefault()
            e.stopPropagation()
            // console.log(e)
            // console.log(span.dataset)
            const spot = new window.mapkit.Coordinate(
              Number.parseFloat(span.dataset.lat),
              Number.parseFloat(span.dataset.lon)
            )
            const marker = new window.mapkit.MarkerAnnotation(spot)
            marker.title = `${span.dataset.name}`
            marker.animates = true
            marker.selected = true
            if (window.map) {
              window.map.showItems([marker])
            }
          })
        }

        const opts = {
          method: 'POST',
          headers: {
            Accept: 'application/json',
            Authorization: `Bearer ${jwtAccess}`,
          },
          body: formData,
        }
        const request = new Request(`${origin}/search`, opts)
        const response = await fetch(request, { credentials: 'same-origin' })
        const json = await response.json()
        console.log(json) 
        if ((json?.addresses.total === 0 || json?.addresses.total_results === 0) 
          && (json?.associations.total === 0 || json?.associations.total_results === 0)
          && (json?.businesses.total === 0 || json?.businesses.total_results === 0)
          && (json?.estateNames.total === 0 || json?.estateNames.total_results === 0)
          && (json?.food.total === 0 || json?.food.total_results === 0)
          && (json?.ownerNames.total === 0 || json?.ownerNames.total_results === 0)
          && (json?.pierNumbers.total === 0 || json?.pierNumbers.total_results === 0)
          && (json?.public?.total === 0 || json?.public.total_results === 0)) {
          const noneFound = document.createElement('span')  
          noneFound.setAttribute('id', 'results')
          noneFound.innerHTML = 'No piers found matching those terms.'
          searchResults.appendChild(noneFound)
        } else {
          const resultsList = document.createElement('ul')
          resultsList.setAttribute('id', 'resultsList')
          resultsList.setAttribute('class', 'searchResults')
          if (json?.addresses?.total > 0 || json?.addresses?.total_results > 0) {
            const addressesResultsList = document.createElement('ul')
            addressesResultsList.setAttribute('id', 'addressesResults')
            addressesResultsList.setAttribute('aria-label', 'Addresses:')
            addressesResultsList.classList.add('searchResults', 'addressesResults')
            const addresses = json.addresses.documents || json.addresses.results
            // json.addresses.documents.forEach((a) => {
            addresses.forEach((address) => {
              let a
              if (address.extra_attributes) {
                a = {
                  value: {
                    pierNumber: address.extra_attributes.pierNumber,
                    address: address.extra_attributes.address,
                    coords: address.extra_attributes.coords,
                  },
                }
              } else {
                a = address
              }
              console.log(a)
              const li = document.createElement('li')
              const link = `<a href="<%= origin %>/pier/${a.value.pierNumber}">`
                + `Pier ${a.value.pierNumber} - ${a.value.address}`
                + '</a>'
              li.innerHTML = link
              addressesResultsList.appendChild(li)
              // create mapkit annotation for pier
              let [lon, lat] = a.value.coords.split(',')
              lon = parseFloat(lon, 10)
              lat = parseFloat(lat, 10)
              // console.log(lat, lon)
              if (lat !== 0 && lon !== 0) {
                const annotationCallout = {
                  calloutLeftAccessoryForAnnotation: () => {
                    const accessoryViewLeft = document.createElement("div")
                    return accessoryViewLeft
                  },
                  calloutRightAccessoryForAnnotation: () => {
                    const accessoryViewRight = document.createElement("a")
                    accessoryViewRight.className = "right-accessory-view"
                    accessoryViewRight.href = `${origin}/pier/${a.value.pierNumber}`
                    accessoryViewRight.target = "_self"
                    accessoryViewRight.textContent = "\u{24D8}"
                    return accessoryViewRight
                  }
                }
                const pierMarker = new window.mapkit.Coordinate(lat, lon)
                const pierAnnotation = new window.mapkit.MarkerAnnotation(pierMarker)
                pierAnnotation.title = `Pier ${a.value.pierNumber}`
                pierAnnotation.subtitle = a.value.address
                pierAnnotation.animates = true
                pierAnnotation.selected = true
                pierAnnotation.color = "#4B93E0"
                pierAnnotation.callout = annotationCallout
                annotations.push(pierAnnotation)
              }
            })
            searchResults.appendChild(addressesResultsList)
          }
          if (json?.businesses?.total > 0 || json?.businesses?.total_results > 0) {
            const businessResultsList = document.createElement('ul')
            businessResultsList.setAttribute('id', 'businessResults')
            businessResultsList.setAttribute('aria-label', 'Businesses:')
            businessResultsList.classList.add('searchResults', 'businessResults')
            const businesses = json.businesses.documents || json.businesses.results
            // json.businesses.documents.forEach((b) => {
            businesses.forEach((business) => {
              let b
              if (business.extra_attributes) {
                b = {
                  value: {
                    business: business.extra_attributes.business,
                    pier: business.extra_attributes.pier,
                    coords: business.extra_attributes.coords,
                  },
                }
              } else {
                b = business
              }
              const li = document.createElement('li')
              const link = `<a href="<%= origin %>/pier/${b.value['pier']}">`
                + `Pier ${b.value['pier']} ${b.value.business}`
                + '</a>'
              li.innerHTML = link
              businessResultsList.appendChild(li)
              // create mapkit annotation for pier
              let [lon, lat] = b.value.coords.split(',')
              lon = parseFloat(lon, 10)
              lat = parseFloat(lat, 10)
              // console.log(lat, lon)
              if (lat !== 0 && lon !== 0) {
                const annotationCallout = {
                  calloutLeftAccessoryForAnnotation: () => {
                    const accessoryViewLeft = document.createElement("div")
                    return accessoryViewLeft
                  },
                  calloutRightAccessoryForAnnotation: () => {
                    const accessoryViewRight = document.createElement("a")
                    accessoryViewRight.className = "right-accessory-view"
                    accessoryViewRight.href = `${origin}/pier/${b.value.pier}`
                    accessoryViewRight.target = "_self"
                    accessoryViewRight.textContent = "\u{24D8}"
                    return accessoryViewRight
                  }
                }
                const pierMarker = new window.mapkit.Coordinate(lat, lon)
                const pierAnnotation = new window.mapkit.MarkerAnnotation(pierMarker)
                pierAnnotation.title = `Pier ${b.value.pier}`
                pierAnnotation.subtitle = b.value.business
                pierAnnotation.animates = true
                pierAnnotation.selected = true
                pierAnnotation.color = "#4B93E0"
                pierAnnotation.callout = annotationCallout
                annotations.push(pierAnnotation)
              }
            })
            searchResults.appendChild(businessResultsList)
          }
          if (json?.vss?.total > 0 || json?.vss?.total_results > 0) {
            const estateNameVssResultsList = document.createElement('ul')
            estateNameVssResultsList.setAttribute('id', 'estateNameVssResults')
            estateNameVssResultsList.setAttribute('aria-label', 'Estate Names:')
            estateNameVssResultsList.classList.add('searchResults', 'estateNameVssResults')
            const estateNamesVss = json.vss.documents || json.vss.results
            // json.vss.documents.forEach((e) => {
            console.log(estateNamesVss)
            estateNamesVss.forEach((estate) => {
              console.log(estate)
              let e
              if (estate.extra_attributes) {
                e = {
                  value: {
                    estateName: estate.extra_attributes.estateName,
                    pier: estate.extra_attributes.pier,
                    coords: estate.extra_attributes.coords,
                  },
                }
              } else {
                e = estate
              }
              const li = document.createElement('li')
              const link = `<a href="<%= origin %>/pier/${e.value['pier']}">`
                + `Pier ${e.value['pier']} `
                + `${(e.value.estateName) ? e.value.estateName: e.value.estateNameDM}`
                + '</a>'
              li.innerHTML = link
              estateNameVssResultsList.appendChild(li)
              // create mapkit annotation for pier
              let [lon, lat] = e.value.coords.split(',')
              lon = parseFloat(lon, 10)
              lat = parseFloat(lat, 10)
              // console.log(lat, lon)
              if (lat !== 0 && lon !== 0) {
                const annotationCallout = {
                  calloutLeftAccessoryForAnnotation: () => {
                    const accessoryViewLeft = document.createElement("div")
                    return accessoryViewLeft
                  },
                  calloutRightAccessoryForAnnotation: () => {
                    const accessoryViewRight = document.createElement("a")
                    accessoryViewRight.className = "right-accessory-view"
                    accessoryViewRight.href = `${origin}/pier/${e.value.pier}`
                    accessoryViewRight.target = "_self"
                    accessoryViewRight.textContent = "\u{24D8}"
                    return accessoryViewRight
                  }
                }
                const pierMarker = new window.mapkit.Coordinate(lat, lon)
                const pierAnnotation = new window.mapkit.MarkerAnnotation(pierMarker)
                pierAnnotation.title = `Pier ${e.value.pier}`
                pierAnnotation.subtitle = e.value.estateName
                pierAnnotation.animates = true
                pierAnnotation.selected = true
                pierAnnotation.color = "#4B93E0"
                pierAnnotation.callout = annotationCallout
                annotations.push(pierAnnotation)
              }
            })
            searchResults.appendChild(estateNameVssResultsList)
          }
          if (false && !(json?.estateNames?.total > 0 || json?.estateNames?.total_results > 0)) {
          // if (json?.estateNames?.total > 0 || json?.estateNames?.total_results > 0) {
            const estateNameResultsList = document.createElement('ul')
            estateNameResultsList.setAttribute('id', 'estateNameResults')
            estateNameResultsList.setAttribute('aria-label', 'Estate Names:')
            estateNameResultsList.classList.add('searchResults', 'estateNameResults')
            const estateNames = json.estateNames.documents || json.estateNames.results
            // json.estateNames.documents.forEach((e) => {
            console.log(estateNames)
            estateNames.forEach((estate) => {
              console.log(estate)
              let e
              if (estate.extra_attributes) {
                e = {
                  value: {
                    estateName: estate.extra_attributes.estateNameDM,
                    pier: estate.extra_attributes.pier,
                    coords: estate.extra_attributes.coords,
                  },
                }
              } else {
                e = estate
              }
              const li = document.createElement('li')
              const link = `<a href="<%= origin %>/pier/${e.value['pier']}">`
                + `Pier ${e.value['pier']} `
                + `${(e.value.estateName) ? e.value.estateName: e.value.estateNameDM}`
                + '</a>'
              li.innerHTML = link
              estateNameResultsList.appendChild(li)
              // create mapkit annotation for pier
              let [lon, lat] = e.value.coords.split(',')
              lon = parseFloat(lon, 10)
              lat = parseFloat(lat, 10)
              // console.log(lat, lon)
              if (lat !== 0 && lon !== 0) {
                const annotationCallout = {
                  calloutLeftAccessoryForAnnotation: () => {
                    const accessoryViewLeft = document.createElement("div")
                    return accessoryViewLeft
                  },
                  calloutRightAccessoryForAnnotation: () => {
                    const accessoryViewRight = document.createElement("a")
                    accessoryViewRight.className = "right-accessory-view"
                    accessoryViewRight.href = `${origin}/pier/${e.value.pier}`
                    accessoryViewRight.target = "_self"
                    accessoryViewRight.textContent = "\u{24D8}"
                    return accessoryViewRight
                  }
                }
                const pierMarker = new window.mapkit.Coordinate(lat, lon)
                const pierAnnotation = new window.mapkit.MarkerAnnotation(pierMarker)
                pierAnnotation.title = `Pier ${e.value.pier}`
                pierAnnotation.subtitle = e.value.estateName
                pierAnnotation.animates = true
                pierAnnotation.selected = true
                pierAnnotation.color = "#4B93E0"
                pierAnnotation.callout = annotationCallout
                annotations.push(pierAnnotation)
              }
            })
            searchResults.appendChild(estateNameResultsList)
          }
          if (json?.food?.total > 0 || json?.food?.total_results > 0) {
            const pierFoodResultsList = document.createElement('ul')
            pierFoodResultsList.setAttribute('id', 'pierFoodResults')
            pierFoodResultsList.setAttribute('aria-label', 'Piers with food:')
            pierFoodResultsList.classList.add('searchResults', 'pierFoodResults')
            const food = json.food.documents || json.food.results
            // json.food.documents.forEach((p) => {
            food.forEach((food) => {
              let f
              if (food.extra_attributes) {
                f = {
                  value: {
                    pier: food.extra_attributes.pier,
                    business: food.extra_attributes.business,
                    coords: food.extra_attributes.coords,
                  },
                }
              } else {
                f = food
              }
              const li = document.createElement('li')
              const link = `<a href="<%= origin %>/pier/${f.value.pier}">`
                + `Pier ${f.value.pier} ${f.value.business}`
                + '</a>'
              li.innerHTML = link
              pierFoodResultsList.appendChild(li)
              // create mapkit annotation for pier
              let [lon, lat] = f.value.coords.split(',')
              lon = parseFloat(lon, 10)
              lat = parseFloat(lat, 10)
              // console.log(lat, lon)
              if (lat !== 0 && lon !== 0) {
                const annotationCallout = {
                  calloutLeftAccessoryForAnnotation: () => {
                    const accessoryViewLeft = document.createElement("div")
                    return accessoryViewLeft
                  },
                  calloutRightAccessoryForAnnotation: () => {
                    const accessoryViewRight = document.createElement("a")
                    accessoryViewRight.className = "right-accessory-view"
                    accessoryViewRight.href = `${origin}/pier/${p.value.pier}`
                    accessoryViewRight.target = "_self"
                    accessoryViewRight.textContent = "\u{24D8}"
                    return accessoryViewRight
                  }
                }
                const pierMarker = new window.mapkit.Coordinate(lat, lon)
                const pierAnnotation = new window.mapkit.MarkerAnnotation(pierMarker)
                pierAnnotation.title = `Pier ${f.value.pier}`
                pierAnnotation.subtitle = f.value.business
                pierAnnotation.animates = true
                pierAnnotation.selected = true
                pierAnnotation.color = "#4B93E0"
                pierAnnotation.callout = annotationCallout
                annotations.push(pierAnnotation)
              }
            })
            searchResults.appendChild(pierFoodResultsList)
          }
          if (json?.ownerNames?.total > 0 || json?.ownerNames.total_results > 0) {
            const ownerNamesResultsList = document.createElement('ul')
            ownerNamesResultsList.setAttribute('id', 'ownerNamesResults')
            ownerNamesResultsList.setAttribute('aria-label', 'Family Names:')
            ownerNamesResultsList.classList.add('searchResults', 'ownerNamesResults')
            const ownerNames = json.ownerNames.documents || json.ownerNames.results
            // json.ownerNames.documents.forEach((o) => {
            ownerNames.forEach((owner) => {
              let o
              if (owner.extra_attributes) {
                o = {
                  value: {
                    pier: owner.extra_attributes.pier,
                    lastname: owner.extra_attributes.lastname,
                    firstname: owner.extra_attributes.firstname,
                    coords: owner.extra_attributes.coords,
                  },
                }
              } else {
                o = owner
              }
              const li = document.createElement('li')
              const name = `${o.value.firstname} ${o.value.lastname}`
              const link = `<a href="<%= origin %>/pier/${o.value['pier']}">`
                + `Pier ${o.value['pier']} ${name}`
                + '</a>'
              li.innerHTML = link
              ownerNamesResultsList.appendChild(li)
              // create mapkit annotation for pier
              let [lon, lat] = o.value.coords.split(',')
              lon = parseFloat(lon, 10)
              lat = parseFloat(lat, 10)
              // console.log(lat, lon)
              if (lat !== 0 && lon !== 0) {
                const annotationCallout = {
                  calloutLeftAccessoryForAnnotation: () => {
                    const accessoryViewLeft = document.createElement("div")
                    return accessoryViewLeft
                  },
                  calloutRightAccessoryForAnnotation: () => {
                    const accessoryViewRight = document.createElement("a")
                    accessoryViewRight.className = "right-accessory-view"
                    accessoryViewRight.href = `${origin}/pier/${o.value.pier}`
                    accessoryViewRight.target = "_self"
                    accessoryViewRight.textContent = "\u{24D8}"
                    return accessoryViewRight
                  }
                }
                const pierMarker = new window.mapkit.Coordinate(lat, lon)
                const pierAnnotation = new window.mapkit.MarkerAnnotation(pierMarker)
                pierAnnotation.title = `Pier ${o.value.pier}`
                pierAnnotation.subtitle = name
                pierAnnotation.animates = true
                pierAnnotation.selected = true
                pierAnnotation.color = "#4B93E0"
                pierAnnotation.callout = annotationCallout
                annotations.push(pierAnnotation)
              }
            })
            searchResults.appendChild(ownerNamesResultsList)
          }
          if (json?.pierNumbers?.total > 0 || json?.pierNumbers?.total_results > 0) {
            const pierNumberResultsList = document.createElement('ul')
            pierNumberResultsList.setAttribute('id', 'pierNumberResults')
            pierNumberResultsList.setAttribute('aria-label', 'Pier Numbers:')
            pierNumberResultsList.classList.add('searchResults', 'pierNumberResults')
            const pierNumbers = json.pierNumbers.documents || json.pierNumbers.results
            // json.pierNumbers.documents.forEach((p) => {
            pierNumbers.forEach((pierNumber) => {
              let p
              if (pierNumber.extra_attributes) {
                p = {
                  value: {
                    pierNumber: pierNumber.extra_attributes.pierNumber,
                    coords: pierNumber.extra_attributes.coords,
                  },
                }
              } else {
                p = pierNumber
              }
              const li = document.createElement('li')
              const link = `<a href="<%= origin %>/pier/${p.value.pierNumber}">`
                + `Pier ${p.value.pierNumber}`
                + '</a>'
              li.innerHTML = link
              pierNumberResultsList.appendChild(li)
              // create mapkit annotation for pier
              let [lon, lat] = p.value.coords.split(',')
              lon = parseFloat(lon, 10)
              lat = parseFloat(lat, 10)
              // console.log(lat, lon)
              if (lat !== 0 && lon !== 0) {
                const annotationCallout = {
                  calloutLeftAccessoryForAnnotation: () => {
                    const accessoryViewLeft = document.createElement("div")
                    return accessoryViewLeft
                  },
                  calloutRightAccessoryForAnnotation: () => {
                    const accessoryViewRight = document.createElement("a")
                    accessoryViewRight.className = "right-accessory-view"
                    accessoryViewRight.href = `${origin}/pier/${p.value.pierNumber}`
                    accessoryViewRight.target = "_self"
                    accessoryViewRight.textContent = "\u{24D8}"
                    return accessoryViewRight
                  }
                }
                const pierMarker = new window.mapkit.Coordinate(lat, lon)
                const pierAnnotation = new window.mapkit.MarkerAnnotation(pierMarker)
                pierAnnotation.title = `Pier ${p.value.pierNumber}`
                // pierAnnotation.subtitle = p.value.business
                pierAnnotation.animates = true
                pierAnnotation.selected = true
                pierAnnotation.color = "#4B93E0"
                pierAnnotation.callout = annotationCallout
                annotations.push(pierAnnotation)
              }
            })
            searchResults.appendChild(pierNumberResultsList)
          }
          if (json?.public?.total > 0 || json?.public?.total_results > 0) {
            const pierPublicResultsList = document.createElement('ul')
            pierPublicResultsList.setAttribute('id', 'pierPublicResults')
            pierPublicResultsList.setAttribute('aria-label', 'Public Piers:')
            pierPublicResultsList.classList.add('searchResults', 'pierPublicResults')
            const _public = json.public.documents || json.public.results
            // json.public.documents.forEach((p) => {
            _public.forEach((_public) => {
              let p
              if (_public.extra_attributes) {
                p = {
                  value: {
                    pier: _public.extra_attributes.pier,
                    firstname: _public.extra_attributes.firstname,
                    coords: _public.extra_attributes.coords,
                  },
                }
              } else {
                p = _public
              }
              const li = document.createElement('li')
              const link = `<a href="<%= origin %>/pier/${p.value.pier}">`
                + `Pier ${p.value.pier} ${p.value.firstname}`
                + '</a>'
              li.innerHTML = link
              pierPublicResultsList.appendChild(li)
              // create mapkit annotation for pier
              let [lon, lat] = p.value.coords.split(',')
              lon = parseFloat(lon, 10)
              lat = parseFloat(lat, 10)
              // console.log(lat, lon)
              if (lat !== 0 && lon !== 0) {
                const annotationCallout = {
                  calloutLeftAccessoryForAnnotation: () => {
                    const accessoryViewLeft = document.createElement("div")
                    return accessoryViewLeft
                  },
                  calloutRightAccessoryForAnnotation: () => {
                    const accessoryViewRight = document.createElement("a")
                    accessoryViewRight.className = "right-accessory-view"
                    accessoryViewRight.href = `${origin}/pier/${p.value.pier}`
                    accessoryViewRight.target = "_self"
                    accessoryViewRight.textContent = "\u{24D8}"
                    return accessoryViewRight
                  }
                }
                const pierMarker = new window.mapkit.Coordinate(lat, lon)
                const pierAnnotation = new window.mapkit.MarkerAnnotation(pierMarker)
                pierAnnotation.title = `Pier ${p.value.pier}`
                pierAnnotation.subtitle = p.value.firstname
                pierAnnotation.animates = true
                pierAnnotation.selected = true
                pierAnnotation.color = "#4B93E0"
                pierAnnotation.callout = annotationCallout
                annotations.push(pierAnnotation)
              }
            })
            searchResults.appendChild(pierPublicResultsList)
          }
          if (json?.associations?.total > 0 || json?.associations?.total_results > 0) {
            const associationsResultsList = document.createElement('ul')
            associationsResultsList.setAttribute('id', 'associationsResults')
            associationsResultsList.setAttribute('aria-label', 'Associations:')
            associationsResultsList.classList.add('searchResults', 'associationsResults')
            const associations = json.associations.documents || json.associations.results
            // json.associations.documents.forEach((a) => {
            associations.forEach((association) => {
              let a
              if (association.extra_attributes) {
                a = {
                  value: {
                    association: association.extra_attributes.association,
                    pier: association.extra_attributes.pier,
                    coords: association.extra_attributes.coords,
                  },
                }
              } else {
                a = association
              }
              const li = document.createElement('li')
              const link = `<a href="<%= origin %>/pier/${a.value['pier']}">`
                + `Pier ${a.value['pier']} ${a.value.association}`
                + '</a>'
              li.innerHTML = link
              associationsResultsList.appendChild(li)
              // create mapkit annotation for pier
              let [lon, lat] = a.value.coords.split(',')
              lon = parseFloat(lon, 10)
              lat = parseFloat(lat, 10)
              // console.log(lat, lon)
              if (lat !== 0 && lon !== 0) {
                const annotationCallout = {
                  calloutLeftAccessoryForAnnotation: () => {
                    const accessoryViewLeft = document.createElement("div")
                    return accessoryViewLeft
                  },
                  calloutRightAccessoryForAnnotation: () => {
                    const accessoryViewRight = document.createElement("a")
                    accessoryViewRight.className = "right-accessory-view"
                    accessoryViewRight.href = `${origin}/pier/${a.value.pier}`
                    accessoryViewRight.target = "_self"
                    accessoryViewRight.textContent = "\u{24D8}"
                    return accessoryViewRight
                  }
                }
                const pierMarker = new window.mapkit.Coordinate(lat, lon)
                const pierAnnotation = new window.mapkit.MarkerAnnotation(pierMarker)
                pierAnnotation.title = `Pier ${a.value.pier}`
                pierAnnotation.subtitle = a.value.association
                pierAnnotation.animates = true
                pierAnnotation.selected = true
                pierAnnotation.color = "#4B93E0"
                pierAnnotation.callout = annotationCallout
                annotations.push(pierAnnotation)
              }
            })
            searchResults.appendChild(associationsResultsList)
          }
          if (window.map) {
            // console.log(window.map)
            if (annotations.length > 0) {
              // console.log(annotations)
              if (window.map) {
                window.map.showItems(annotations?.reverse())
              }
            }
            // await annotateSearchResults(searchResults)
          }
        }
      }
    }
  </script>
