<% if (flash?.info) { %>
  <div id="info" class="info">
    <span><%= flash.info %></span>
  </div>
<% } %>
<% if (flash?.message) { %>
  <div id="messages" class="messages">
    <span><%= flash.message %></span>
  </div>
<% } %>
<% if (flash?.error) { %>
  <div id="errors" class="errors">
    <span><%= flash.error %></span>
  </div>
<% } %>
<article>
  <section class="main">
    <% if (!pier?.pier) { %>
      <h2><%= pierNumber %> is not a valid pier number on Geneva Lake</h2>
    <% } else { %>
      <h2>Pier <%= pier.pier %>, located in the <nobr><a href="/towns/<%= setTown %>"><%= town %></a></nobr></h2>
      <div class="previousPier">
        <% if (previousPier?.length !== 0) { %>
        <a href="<%= origin %>/edit/pier/<%= previousPier %>">< Pier <%= previousPier %></a>
        <% } else { %>
        Pier <%= pier.pier %> 
        <% } %>
      </div>
      <div class="nextPier">
        <% if (nextPier.length !== 0) { %>
        <a href="<%= origin %>/edit/pier/<%= nextPier %>">Pier <%= nextPier %> ></a>
        <% } else { %>
        Pier <%= pier.pier %> 
        <% } %>
      </div>
      <form id="pierEdit" name="pierEdit" action="<%= origin %>/edit/pier/<%= pierNumber %>" method="POST" enctype="multipart/form-data">
        Pier data schema version: <%= pier.version %>
        <input id="number" name="number" type="hidden" value="<%= pierNumber %>">
        <input id="version" name="version" type="hidden" value="<%= pier.version %>">
        <input id="csrf-token" type="hidden" value="<%= csrfToken %>">
        <fieldset id="pierPhoto" name="pierPhoto" form="pierEdit" class="edit_fieldset" title="Pier Photo Form">
          <legend>Pier Photo</legend>
          <% if (photo) { %>

          <% } else { %>
          <span>No photo added for this pier yet.</span><br>
          <input id="photo_0" name="photo_0" type="file" accept=".png,.jpg,.jpeg">
          <% } %>
        </fieldset>
        <fieldset id="pierLocation" id="pierLocation" form="pierEdit" class="edit_fieldset" title="Pier Location Form">
          <legend>Pier Location</legend>
          <label for="lon">Longtitude</label>
          <input id="lon" name="lon" type="text" size="30" value="<%= lon %>" required><br>
          <label for="lat">Latitude</label>
          <input id="lat" name="lat" type="text" size="30" value="<%= lat %>" required><br>
          <label for="geohash">Geohash</label>
          <input id="geohash" name="geohash" type="text" size="30" value="<%= pier.geohash %>"><br>
          <label for="pluscode">Pluscode</label>
          <input id="pluscode" name="pluscode" type="text" size="30" value="<%= pier.pluscode %>"><br>
        </fieldset>
        <fieldset id="pierAddress" id="pierAddress" form="pierEdit" class="edit_fieldset" title="Pier Address Form">
          <legend>Pier Address</legend>
          <input type="radio" id="addressType1" name="addressType" value="ass" required><label for="addressType1">Association</label>
          <input type="radio" id="addressType2" name="addressType" value="bus"><label for="addressType2">Business</label>
          <input type="radio" id="addressType3" name="addressType" value="res"><label for="addressType3">Residential</label>
          <label for="association">Association Name</label>
          <input id="association" name="association" type="text" size="29" maxlendgth="100" value="<%= pier.property.association %>"><br>

          <label for="business">Business Name</label>
          <input id="business" name="business" type="text" size="30" maxlength="100" value="<%= pier.property.business %>"></br>

          <label for="isMarina">Is a marina?</label>
          <input id="isMarina" name="isMarina" type="checkbox" <%= (pier.property.isMarina=== 1) ? 'checked' : '' %>><br>

          <label for="hasFood">Has food?</label>
          <input id="hasFood" name="hasFood" type="checkbox" <%= (pier.property.hasFood=== 1) ? 'checked' : '' %>><br>

          <label for="public">Is a public pier?</label>
          <input id="public" name="public" type="checkbox" <%= (pier.public=== 1) ? 'checked' : '' %>><br>

          <label for="bigSwimPier">Is a big swim pier?</label>
          <input id="bigSwimPier" name="bigSwimPier" type="checkbox" <%= (pier.bigSwimPier === 1) ? 'checked' : '' %>><br>

          <label for="established">Established In</label>
          <input id="established" name="established" type="text" size="30" maxlength=4 value="<%= pier.property.established %>"><br>

          <label for="associationUrl">Website</label>
          <input id="associationUrl" name="associationUrl" type="url" size="30" placeholder="https://genevalakepiers.com" maxlength="100" value="<%= pier.property.associationUrl %>"><br>

          <label for="tel">Telephone</label>
          <input id="tel" name="tel" type="tel" size="30" placeholder="123-456-7890" pattern="(?:\+1)?\(?\d{3}\)?(?:-| )\d{3}-\d{4}" title="Enter number as 123-456-7890" maxlength="15" value="<%= pier.property.tel %>"><br>

          <label for="street">Street</label>
          <input id="street" name="street" type="text" size="30" maxlength="70" value="<%= pier.property.address.street %>"><br>

          <label for="city">City</label>
          <input id="city" name="city" type="text" size="30" maxlength="50" value="<%= pier.property.address.city %>"><br>

          <label for="state">State</label>
          <input id="state" name="state" type="text" size="3" maxlength="2" value="<%= pier.property.address.state %>"><br>

          <label for="zip">Zip Code</label>
          <input id="zip" name="zip" type="text" size="10" maxlength="9" value="<%= pier.property.address.zip %>"><br>
        </fieldset>
        <fieldset id="pierOwners" id="pierOwners" form="pierEdit" class="edit_fieldset" title="Pier Address Form">
          <legend>Pier Owners</legend>
          <% if (pier.owners.length > 0) { %>
            <% pier.owners.forEach((o, i) => { %>
              <div class="editOwner" data-o=<%= i %>>
              <label for="o_<%= i %>_estateName">Estate Name</label>
              <input id="o_<%= i %>_estateName"" name="o_<%= i %>_estateName"" type="text" size="30" maxlength="100" value="<%= o.estateName %>"><br>
              <label for="o_<%= i %>_membershipType">GLA Membership</label>
              <select id="o_<%= i %>_membershipType"" name="o_<%= i %>_membershipType"" type="text">
                <%
                  const memberTypes = ['Residential Non-member', 'Regular', 'Sustaining', 'Contributing', 'Donor', 'Benefactor']
                  memberTypes.forEach((t) => {
                    const re = new RegExp(`${t}`)
                    const selected = (re.test(o.membershipType)) ? 'selected' : '' %>
                  <option value="<%= t %>" <%= selected %>><%= t %></option>
                  <% }) %>
              </select>
                <br>
              <% if (o.members.length > 0) { %>
                  <div>
                <% o.members.forEach((m, j) => { %>
                    <div data-o=<%= i %> data-m=<%= j %>>
                      <input id="o_<%= i %>_m_<%= j %>_member_t" name="o_<%= i %>_m_<%= j %>_member_t" type="text" size="3" maxlength="10" value="<%= m.t %>" placeholder="Title"> 
                      <input id="o_<%= i %>_m_<%= j %>_member_f" name="o_<%= i %>_m_<%= j %>_member_f" type="text" size="11" maxlength="60" value="<%= m.f %>" placeholder="First"> 
                      <input id="o_<%= i %>_m_<%= j %>_member_m" name="o_<%= i %>_m_<%= j %>_member_m" type="text" size="3" maxlength="10" value="<%= m.m %>" placeholder="M"> 
                      <input id="o_<%= i %>_m_<%= j %>_member_l" name="o_<%= i %>_m_<%= j %>_member_l" type="text" size="11" maxlength="30" value="<%= m.l %>" placeholder="Last"> 
                      <input id="o_<%= i %>_m_<%= j %>_member_s" name="o_<%= i %>_m_<%= j %>_member_s"" type="text" size="3" maxlength="10" value="<%= m.s %>" placeholder="suffix"> 
                      <input id="o_<%= i %>_m_<%= j %>_member_hidden" name="o_<%= i %>_m_<%= j %>_member_hidden"" type="checkbox" <%= (m.hidden === 1) ? 'checked' : '' %>>
                      <label for="o_<%= i %>_m_<%= j %>_member_hidden">hide</label>
                    </div>
                <% }) %>
                    <span class="addPerson">+ person</span>
                  </div><br>
              <% } %>
              </div>
            <% }) %>
        <% } else { %>
          No owners entered.  <span class="addOwner">+ owner</span>.
        <% } %>
        </fieldset>
        <fieldset id="finish">
          <input type="submit">
        </fieldset>
      </form>
      <% if (photo) { %>
      <picture>
        <source media="(max-width:820px)" srcset="">
        <source media="(min-width:821px)" srcset="">
        <img alt="Photo of pier <%= pier %> in <%= town %>." src="">
      </picture>
      <% } %>
      <h3 id="location">Location:</h3>
      <ul class="location">
        <li>lat: <%= pier.loc.split(',')[1] %></li>
        <li>lon: <%= pier.loc.split(',')[0] %></li>
        <li>geohash: <%= pier.geohash %></li>
        <li>pluscode: <a href="https://www.google.com/maps/place/<%= encodeURIComponent(pier.pluscode) %>"><%= pier.pluscode %></a></li>
      </ul>
      <h3 id="address">Street Address:</h3>
      <ul class="location">
        <% if (pier.property?.association !== undefined && pier.property?.association?.length !== 0) {
          let assoc
          if (pier.property?.associationUrl !== undefined && pier.property?.associationUrl.length !== 0) {
            assoc = `<a href="${pier.property.associationUrl}">${pier.property.association}</a>`
          } else {
            assoc = pier.property.association
          } %>
          <li>Association: <%- assoc %></li>
        <% } %>
        <% if (pier?.property?.tel !== undefined && pier?.property?.tel.length !== 0) { %>
          <li>Telephone: <a href="tel:<%= pier.property.tel %>"><%= pier.property.tel %></a></li>
        <% } %>
        <% if (pier?.property?.established !== undefined && pier?.property?.established?.length !== 0) { %>
          <li>Established in <%= pier.property.established %></li>
        <% } %>
        <% if (pier.owners[0]?.estateName !== "") { %>
          <li><span class="estateName"><%= pier.owners[0]?.estateName %></span></li>
        <% } %>
        <% if (pier.property?.address?.street !== undefined) { %>
          <li><%= pier.property.address.street %></li>
        <% } %>
        <% if (pier.property?.address?.city !== undefined) { %>
          <li><%= pier.property.address.city %>, WI <%= pier.property.address?.zip %></li>
        <% } %>
      </ul>
      <h3 id="owners">Owners:</h3>
      <% if (pier?.owners.length < 1) { %>
        Pier owner information is missing.  
      <% } else { %>
        <ul class="owners">
        <% pier.owners.forEach((owner) => {
          let o = '' %>
          <li>
          <ul class="owners">
          <% if (owner?.members.length > 0) {
            owner.members.forEach((m) => {
              o += `<div>${m.t} ${m.f} ${m.m} ${m.l} ${m.s}</div>`
            })
          }
          if (owner.member === true) {
            o += `<div>GLA memberhip level: ${owner.membershipType}</div>`
          } %>
          <li><%- o %></li>
          </ul></li>
        <% }) %>
        </ul>
      <% } %>
    <% } %>
  </section> 
  <script nonce="<%= nonce %>">
    const form = document.forms['pierEdit']
    const radio = form['addressType']
    const assocInput = form['association']
    const busInput = form['business']
    const isMar = form['isMarina']
    let isMarCheckedTemp
    const hasFood = form['hasFood']
    let hasFoodCheckedTemp
    const public = form['public']
    let publicCheckedTemp
    const bigSwimPier = form['bigSwimPier']
    let bigSwimPierCheckedTemp
    if (assocInput.value !== '') {
      form['addressType1'].disabled =  false
      form['addressType1'].checked = true
      form['bigSwimPier'].disabled = false
      form['public'].disabled = true
      form['public'].checked = false
      busInput.disabled = true
      form['isMarina'].checked = false
      form['isMarina'].disabled = true
      form['hasFood'].checked = false
      form['hasFood'].disabled = true
    } else if (busInput.value !== '') {
      form['addressType2'].disabled =  false
      form['addressType2'].checked = true
      form['isMarina'].disabled = false 
      form['hasFood'].disabled = false 
      form['bigSwimPier'].disabled = true 
    } else {
      form['addressType3'].checked = true
      assocInput.disabled = true
      busInput.disabled = true
      form['bigSwimPier'].disabled = true 
      form['bigSwimPier'].checked = false
      form['public'].disabled = true 
      form['public'].checked = false
      form['isMarina'].checked = false
      form['isMarina'].disabled = true
      form['hasFood'].checked = false
      form['hasFood'].disabled = true
    }
    radio.forEach((r) => {
      r.addEventListener('change', radioSelection)
    })
    let assocTemp = []
    let busTemp = []
    
    function radioSelection(e) {
      e.preventDefault()
      e.stopPropagation()
      const val = e.target.value
      // console.log(val)
      console.info('Assoc: ', assocInput.value, assocTemp)
      console.info('Bus: ', busInput.value, busTemp)
      if (val === 'ass') {
        if (busInput !== '' && busInput !== undefined) {
          busTemp.push(busInput.value)
          busInput.value = ''
        }
        busInput.disabled = true
        assocInput.disabled = false
        assocInput.value = (assocTemp.length > 0) ? assocTemp.pop() : ''
        bigSwimPier.checked = bigSwimPierCheckedTemp
        bigSwimPier.disabled = false
        isMarCheckedTemp = isMar.checked
        isMar.checked = false
        isMar.disabled = true
        hasFoodCheckedTemp = hasFood.checked
        hasFood.checked = false
        hasFood.disabled = true
      }
      if (val === 'bus') {
        if (assocInput.value !== '' && assocInput !== undefined) {
          assocTemp.push(assocInput.value)
          assocInput.value = ''
        }
        assocInput.disabled = true
        busInput.value = (busTemp.length > 0) ? busTemp.pop() : ''
        busInput.disabled = false
        isMar.checked = isMarCheckedTemp
        isMar.disabled = false
        hasFood.checked = hasFoodCheckedTemp
        hasFood.disabled = false
        public.checked = publicCheckedTemp
        public.disabled = false
        bigSwimPier.checked = bigSwimPierCheckedTemp
        bigSwimPier.disabled = true
      } 
      if (val === 'res') {
        if (assocInput.value !== '' && assocInput !== undefined) {
          assocTemp.push(assocInput.value)
          assocInput.value = ''
        }
        assocInput.disabled = true
        if (busInput !== '' && busInput !== undefined) {
          busTemp.push(busInput.value)
          busInput.value = ''
        }
        busInput.disabled = true
        isMarCheckedTemp = isMar.checked
        isMar.checked = false
        isMar.disabled = true
        hasFoodCheckedTemp = hasFood.checked
        hasFood.checked = false
        hasFood.disabled = true
        publicCheckedTemp = public.checked
        public.checked = false
        public.disabled = true
        bigSwimPierCheckedTemp = bigSwimPier.checked
        bigSwimPier.disabled = true
      }}

      const addPersonSpans = document.querySelectorAll('span.addPerson')
      addPersonSpans.forEach((p) => {
        p.addEventListener('click', (e) => {
          e.preventDefault()
          e.stopPropagation()
          const dataSet = e.target.previousElementSibling.dataset
          // console.info(dataSet)
          const o = dataSet.o
          const m = parseInt(dataSet.m) + 1
          const newPersonDiv = document.createElement('div')
          newPersonDiv.setAttribute('data-o', o)
          newPersonDiv.setAttribute('data-m', m)
          const title = document.createElement('input')
          title.setAttribute('type', 'text')
          title.setAttribute('id', `o_${o}_m_${m}_member_t`)
          title.setAttribute('name', `o_${o}_m_${m}_member_t`)
          title.setAttribute('size', '3')
          title.setAttribute('maxlength', '10')
          title.setAttribute('value', '')
          title.setAttribute('placeholder', 'Title')
          newPersonDiv.appendChild(title)
          const first = document.createElement('input')
          first.setAttribute('type', 'text')
          first.setAttribute('id', `o_${o}_m_${m}_member_f`)
          first.setAttribute('name', `o_${o}_m_${m}_member_f`)
          first.setAttribute('size', '11')
          first.setAttribute('maxlength', '60')
          first.setAttribute('value', '')
          first.setAttribute('placeholder', 'First')
          newPersonDiv.appendChild(first)
          const middle = document.createElement('input')
          middle.setAttribute('type', 'text')
          middle.setAttribute('id', `o_${o}_m_${m}_member_m`)
          middle.setAttribute('name', `o_${o}_m_${m}__member_m`)
          middle.setAttribute('size', '3')
          middle.setAttribute('maxlength', '10')
          middle.setAttribute('value', '')
          middle.setAttribute('placeholder', 'M')
          newPersonDiv.appendChild(middle)
          const last = document.createElement('input')
          last.setAttribute('type', 'text')
          last.setAttribute('id', `o_${o}_m_${m}_member_l`)
          last.setAttribute('name', `o_${o}_m_${m}_member_l`)
          last.setAttribute('size', '11')
          last.setAttribute('maxlength', '30')
          last.setAttribute('value', '')
          last.setAttribute('placeholder', 'Last')
          newPersonDiv.appendChild(last)
          const suffix = document.createElement('input')
          suffix.setAttribute('type', 'text')
          suffix.setAttribute('id', `o_${o}_m_${m}_member_s`)
          suffix.setAttribute('name', `o_${o}_m_${m}_member_s`)
          suffix.setAttribute('size', '3')
          suffix.setAttribute('maxlength', '10')
          suffix.setAttribute('value', '')
          suffix.setAttribute('placeholder', 'suffix')
          newPersonDiv.appendChild(suffix)
          const hidden = document.createElement('input')
          hidden.setAttribute('type', 'checkbox')
          hidden.setAttribute('id', `o_${o}_m_${m}_member_hidden`)
          hidden.setAttribute('name', `o_${o}_m_${m}_member_hidden`)
          const shouldBeChecked = document.querySelector(`input[type=checkbox]#o_${o}_m_${dataSet?.m}_member_hidden`)?.checked
          if (shouldBeChecked === true) {
            hidden.setAttribute('checked', '')
          }
          newPersonDiv.appendChild(hidden)
          const hlabel = document.createElement('label')
          hlabel.innerText = 'hide'
          hlabel.setAttribute('for', `o_${o}_m_${m}_member_hidden`)
          newPersonDiv.appendChild(hlabel)
          const insertInto = e.target.parentElement
          // console.log(insertInto)
          insertInto.insertBefore(newPersonDiv, e.target)
        })
      })

      const fileInput = form['photo_0']
      fileInput.addEventListener('change', handlePhoto, false)
      function handlePhoto(e) {
        e.preventDefault()
        e.stopPropagation()
        // prepareNewImage(this.files)
        prepareNewImage()
      }
      const imageDropTarget = form['pierPhoto']
      imageDropTarget.addEventListener('dragenter', dragnoop, false)
      imageDropTarget.addEventListener('dragover', dragnoop, false)
      imageDropTarget.addEventListener('drop', dragdrop, false)
      function dragnoop(e) {
        e.preventDefault()
        e.stopPropagation()
        // console.log(e)
      }
      function dragdrop(e) {
        e.preventDefault()
        e.stopPropagation()
        const files = e.dataTransfer.files
        console.log(files)
        // prepareNewImage(files) 
        prepareNewImage() 
      }
      
      function preparePierData(e) {
        console.log('step 1: prepare form data')
        const pier = {}
        pier.pier = form['number'].value
        pier.version = form['version'].value
        pier.loc = `${form['lon'].value.toString()},${form['lat'].value.toString()}`
        pier.geohash = form['geohash'].value
        pier.pluscode = form['pluscode'].value
        pier.public = (form['public'].checked) ? 1 : 0
        pier.bigSwimPier = (form['bigSwimPier'].checked) ? 1 : 0
        const property = {}
        property.association = form['association'].value
        property.established = parseInt(form['established'].value, 10)
        property.associationUrl = form['associationUrl'].value
        property.tel = form['tel'].value.replace(/(?<area>\d{3})-(?<prefix>\d{3})-(?<exch>\d{4})/, '+1 ($<area>) $<prefix>-$<exch>')
        property.business = form['business'].value
        property.isMarina = (form['isMarina'].checked) ? 1 : 0
        property.hasFood = (form['hasFood'].checked) ? 1 : 0
        const address = {}
        address.street = form['street'].value
        address.city = (form['city'].value !== '') ? form['city'].value : 'Lake Geneva'
        address.state = (form['state'].value !== '') ? form['state'].value : 'WI'
        address.zip = (form['zip'].value !== '') ? form['zip'].value : '53147'
        pier.property = property
        const owners = []
        const ownerNodes = document.querySelectorAll('div.editOwner')
        ownerNodes.forEach((o, i) => {
          // console.log(`ownerNodes: ${i}`)
          owners[i] = {}
          owners[i].estateName = form[`o_${i}_estateName`].value
          owners[i].membershipType = form[`o_${i}_membershipType`].options[form[`o_${i}_membershipType`].selectedIndex].value
          owners[i].member = !(/non-member/i.test(owners[i].membershipType))
          // const mCollection = m.children[6].children
          const mCollection = o.querySelector(':scope > div').children
          const members = []
          for (personRow of mCollection) {
            if (/div/i.test(personRow.tagName)) {
              const o = i
              const m = personRow.dataset.m
              if ((form[`o_${o}_m_${m}_member_f`].value !== '') && (form[`o_${o}_m_${m}_member_l`].value !== '')) {
                // console.log(`person: ${o} ${m}`)
                members[m] = {
                  t: form[`o_${o}_m_${m}_member_t`].value,
                  f: form[`o_${o}_m_${m}_member_f`].value,
                  m: form[`o_${o}_m_${m}_member_m`].value,
                  l: form[`o_${o}_m_${m}_member_l`].value,
                  s: form[`o_${o}_m_${m}_member_s`].value,
                  hidden: (form[`o_${o}_m_${m}_member_hidden`].checked) ? 1 : 0
                }
              }
            }
          }
          owners[i].members = members
        })
        pier.owners = owners
        console.log(pier)
        return pier
      }

      function prepareNewImage() {
        console.log('step 2: prepare new image')
        const span = form['pierPhoto'].querySelector(':scope > span')
        const fileList = form['photo_0'].files
        span.innerHTML = `Image selected for pier <%= pierNumber %><br>${fileList[0].name} <br>type: ${fileList[0].type} <br>${Math.floor(fileList[0].size/1024)} KBs.`
        console.log(span)
      }

      async function send(data) {
        console.log('step 3: send data')
        let jwtAccess = '<%= searchJwtAccess %>'
        const opts = {
          method: 'POST',
          headers: {
            Accept: 'application/json',
            Authorization: `Bearer ${jwtAccess}`,
          },
          body: data,
        }
        console.dir(opts)
        const request = new Request(`${origin}/edit/pier/<% pierNumber %>`, opts)
        console.dir(request)
        // const response = await fetch(request, { credentials: 'same-origin' })
      }

      const submit = document.querySelector('input[type=submit]')
      submit.addEventListener('click', submitPierEdits)
      async function submitPierEdits(e) {
        e.preventDefault()
        e.stopPropagation()
        const pier = preparePierData(e)
        let file = form['photo_0'].files
        console.log(`files ready to be uploaded: ${file.length}`)
        // prepareNewImage(e)
        const formData = new FormData()
        formData.append('csrfTokenHidden', form['csrf-token'].value)
        formData.append('pier', pier)
        await send(formData)
      }
      // Event hander for lon/lat fields to get geohash
      async function getGeoHash(e) {
        const lon = parseFloat(form['lon'].value, 10)
        const lat = parseFloat(form['lat'].value, 10)
        console.log(lon, lat)
        if (lon === 0 || lat === 0) {
          return false
        }
        const data = new FormData()
        data.append('csrfTokenHidden', form['csrf-token'].value)
        data.append('pier', form['number'].value)
        data.append('lon', lon.toString())
        data.append('lat', lat.toString())
        let jwtAccess = '<%= searchJwtAccess %>'
        const opts = {
          method: 'POST',
          headers: {
            Accept: 'application/json',
            Authorization: `Bearer ${jwtAccess}`,
          },
          body: data,
        }
        console.dir(opts)
        const request = new Request(`${origin}/edit/geohash`, opts)
        console.dir(request)
        const response = await (await fetch(request, { credentials: 'same-origin' })).json()
        console.log(response)
        if (response?.geoHash !== 0) {
          form['geohash'].value = response.geoHash
        }
      }
      form['lon'].addEventListener('change', getGeoHash, false)
      form['lat'].addEventListener('change', getGeoHash, false)
  </script>
  <section class="map">
    <%# map embed %>
    <%- await include('./map-embed.ejs') -%>
    <%# map embed %>
    <script nonce="<%= nonce %>">
      const map = document.querySelector('div#map')
      // console.log(map)
    </script>
  </section>
</article>

